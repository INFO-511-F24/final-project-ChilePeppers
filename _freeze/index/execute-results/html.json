{
  "hash": "ff9e9e18ee168d6a1196ea4d8b4de0ff",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"EV Charging Trends and Predictions\"\nsubtitle: \"INFO 511 - Fall 2024 - Final Project\"\nauthor: \n  - name: \"ChilePeppers\"\n    affiliations:\n      - name: \"School of Information, University of Arizona\"\ndescription: |\n  This project explores trends in electric vehicle (EV) charging efficiency \n  and builds predictive models to understand charging behaviors.\nformat:\n  html:\n    code-tools: true\n    code-overflow: wrap\n    embed-resources: true\n    fig-width: 6\n    fig-height: 4  \neditor: visual\nexecute:\n  warning: true\n  echo: true\njupyter: python3\n---\n\n::: {#load-pkgs .cell message='false' execution_count=1}\n``` {.python .cell-code}\nimport warnings\nimport pandas as pd\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport scipy.stats as stats \nimport statsmodels.api as sm\n\nwarnings.filterwarnings(\"ignore\")\n```\n:::\n\n\n# Team ChilePeppers INFO511 Term Project\n## Electric Vehicle (EV) Charging Dataset Assessment\n \n\n## Introduction and Data\n\nThe ChilePeppers team completed an assessment of the electric vehicle (EV) charging dataset for the INFO511 term project. The dataset was selected out of an interest to explore the evolving EV technical space and build a predictive model for charging efficiency improvements.\n\n### Table 1 - Electric Vehicle (EV) Charging Dataset: Column Headings\n\n::: {#7b1328da .cell execution_count=2}\n``` {.python .cell-code}\nurl = \"https://raw.githubusercontent.com/INFO-511-F24/final-project-ChilePeppers/main/data/ev_charging_patterns.csv\"\nev_charging  = pd.read_csv(url)\n\nev_charging.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=22}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>User ID</th>\n      <th>Vehicle Model</th>\n      <th>Battery Capacity (kWh)</th>\n      <th>Charging Station ID</th>\n      <th>Charging Station Location</th>\n      <th>Charging Start Time</th>\n      <th>Charging End Time</th>\n      <th>Energy Consumed (kWh)</th>\n      <th>Charging Duration (hours)</th>\n      <th>Charging Rate (kW)</th>\n      <th>Charging Cost (USD)</th>\n      <th>Time of Day</th>\n      <th>Day of Week</th>\n      <th>State of Charge (Start %)</th>\n      <th>State of Charge (End %)</th>\n      <th>Distance Driven (since last charge) (km)</th>\n      <th>Temperature (°C)</th>\n      <th>Vehicle Age (years)</th>\n      <th>Charger Type</th>\n      <th>User Type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>User_1</td>\n      <td>BMW i3</td>\n      <td>108.463007</td>\n      <td>Station_391</td>\n      <td>Houston</td>\n      <td>1/1/2024 0:00</td>\n      <td>1/1/2024 0:39</td>\n      <td>60.712346</td>\n      <td>0.591363</td>\n      <td>36.389181</td>\n      <td>13.087717</td>\n      <td>Evening</td>\n      <td>Tuesday</td>\n      <td>29.371576</td>\n      <td>86.119962</td>\n      <td>293.602111</td>\n      <td>27.947953</td>\n      <td>2.0</td>\n      <td>DC Fast Charger</td>\n      <td>Commuter</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>User_2</td>\n      <td>Hyundai Kona</td>\n      <td>100.000000</td>\n      <td>Station_428</td>\n      <td>San Francisco</td>\n      <td>1/1/2024 1:00</td>\n      <td>1/1/2024 3:01</td>\n      <td>12.339275</td>\n      <td>3.133652</td>\n      <td>30.677735</td>\n      <td>21.128448</td>\n      <td>Morning</td>\n      <td>Monday</td>\n      <td>10.115778</td>\n      <td>84.664344</td>\n      <td>112.112804</td>\n      <td>14.311026</td>\n      <td>3.0</td>\n      <td>Level 1</td>\n      <td>Casual Driver</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>User_3</td>\n      <td>Chevy Bolt</td>\n      <td>75.000000</td>\n      <td>Station_181</td>\n      <td>San Francisco</td>\n      <td>1/1/2024 2:00</td>\n      <td>1/1/2024 4:48</td>\n      <td>19.128876</td>\n      <td>2.452653</td>\n      <td>27.513593</td>\n      <td>35.667270</td>\n      <td>Morning</td>\n      <td>Thursday</td>\n      <td>6.854604</td>\n      <td>69.917615</td>\n      <td>71.799253</td>\n      <td>21.002002</td>\n      <td>2.0</td>\n      <td>Level 2</td>\n      <td>Commuter</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>User_4</td>\n      <td>Hyundai Kona</td>\n      <td>50.000000</td>\n      <td>Station_327</td>\n      <td>Houston</td>\n      <td>1/1/2024 3:00</td>\n      <td>1/1/2024 6:42</td>\n      <td>79.457824</td>\n      <td>1.266431</td>\n      <td>32.882870</td>\n      <td>13.036239</td>\n      <td>Evening</td>\n      <td>Saturday</td>\n      <td>83.120003</td>\n      <td>99.624328</td>\n      <td>199.577785</td>\n      <td>38.316313</td>\n      <td>1.0</td>\n      <td>Level 1</td>\n      <td>Long-Distance Traveler</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>User_5</td>\n      <td>Hyundai Kona</td>\n      <td>50.000000</td>\n      <td>Station_108</td>\n      <td>Los Angeles</td>\n      <td>1/1/2024 4:00</td>\n      <td>1/1/2024 5:46</td>\n      <td>19.629104</td>\n      <td>2.019765</td>\n      <td>10.215712</td>\n      <td>10.161471</td>\n      <td>Morning</td>\n      <td>Saturday</td>\n      <td>54.258950</td>\n      <td>63.743786</td>\n      <td>203.661847</td>\n      <td>-7.834199</td>\n      <td>1.0</td>\n      <td>Level 1</td>\n      <td>Long-Distance Traveler</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### Table 2 - EV Charging Dataset: Column Data Types\n\n::: {#bdc714e5 .cell execution_count=3}\n``` {.python .cell-code}\nev_charging.info()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 1320 entries, 0 to 1319\nData columns (total 20 columns):\n #   Column                                    Non-Null Count  Dtype  \n---  ------                                    --------------  -----  \n 0   User ID                                   1320 non-null   object \n 1   Vehicle Model                             1320 non-null   object \n 2   Battery Capacity (kWh)                    1320 non-null   float64\n 3   Charging Station ID                       1320 non-null   object \n 4   Charging Station Location                 1320 non-null   object \n 5   Charging Start Time                       1320 non-null   object \n 6   Charging End Time                         1320 non-null   object \n 7   Energy Consumed (kWh)                     1254 non-null   float64\n 8   Charging Duration (hours)                 1320 non-null   float64\n 9   Charging Rate (kW)                        1254 non-null   float64\n 10  Charging Cost (USD)                       1320 non-null   float64\n 11  Time of Day                               1320 non-null   object \n 12  Day of Week                               1320 non-null   object \n 13  State of Charge (Start %)                 1320 non-null   float64\n 14  State of Charge (End %)                   1320 non-null   float64\n 15  Distance Driven (since last charge) (km)  1254 non-null   float64\n 16  Temperature (°C)                          1320 non-null   float64\n 17  Vehicle Age (years)                       1320 non-null   float64\n 18  Charger Type                              1320 non-null   object \n 19  User Type                                 1320 non-null   object \ndtypes: float64(10), object(10)\nmemory usage: 206.4+ KB\n```\n:::\n:::\n\n\n## Methodology\n\n### Graphical Review of the Data\n\n### Figure 1 - XXX\n\n::: {#cell-Figure1 .cell execution_count=4}\n``` {.python .cell-code}\nplt.figure(figsize=(8,6))\nsns.boxplot(data=ev_charging,x='Vehicle Model',y='Battery Capacity (kWh)')\nplt.title('\\nFigure 1 - Battery Capacity (KWh) for Five Models of EV Studied\\n')\nplt.xlabel('Vehicle Model Studied')\nplt.ylabel('Battery Capacity (kWh)')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Battery Capacity (KWh) for Five Models of EV Studied](index_files/figure-html/figure1-output-1.png){#figure1 width=668 height=559}\n:::\n:::\n\n\n### Figure 2 - XXX\n\n::: {#cell-Figure2 .cell execution_count=5}\n``` {.python .cell-code}\nplt.figure(figsize=(8,6))\nsns.boxplot(data=ev_charging,x='Charging Station Location',y='Charging Duration (hours)')\nplt.title('\\nFigure 2 - Charging Station Location vs. Charging Duration (hours)\\n')\nplt.xlabel('Charging Station Location')\nplt.ylabel('Charge Duration (hours)')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Charging Station Location vs. Charging Duration (hours)](index_files/figure-html/figure2-output-1.png){#figure2 width=651 height=559}\n:::\n:::\n\n\n::: {#cell-Figure3 .cell execution_count=6}\n``` {.python .cell-code}\nplt.figure(figsize=(8,6))\nsns.scatterplot(data=ev_charging,x='Charging Rate (kW)',y='Charging Cost (USD)',hue='Time of Day')\nplt.title('\\nFigure 3 - Charging Rate (kW) vs Charging Cost (USD) as a function of Time of Day\\n')\nplt.xlabel('Charging Rate (kW)')\nplt.ylabel('Charging Cost (USD)')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Charging Rate (kW) vs Charging Cost (USD)](index_files/figure-html/figure3-output-1.png){#figure3 width=691 height=559}\n:::\n:::\n\n\n::: {#cell-Figure4 .cell execution_count=7}\n``` {.python .cell-code}\nplt.figure(figsize=(8,6))\nsns.scatterplot(data=ev_charging,x='Charging Rate (kW)',y='Charging Cost (USD)',hue='Charging Station Location')\nplt.title('\\nFigure 4 - Charging Rate (kW) vs. Charging Cost (USD) as a function of Location \\n')\nplt.xlabel('Charging Rate (kW)')\nplt.ylabel('Chraging Cost (USD)')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Charging Station Location vs. Charging Duration (hours)](index_files/figure-html/figure4-output-1.png){#figure4 width=682 height=559}\n:::\n:::\n\n\n::: {#cell-Figure5 .cell execution_count=8}\n``` {.python .cell-code}\nplt.figure()\nsns.histplot(data=ev_charging,x='Battery Capacity (kWh)')\nplt.title('\\nFigure 5 - Histogram of Battery Capacity (kWh)\\n')\nplt.xlabel('Battery Capacity (kWh)')\nplt.ylabel('Count')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Histogram of Battery Capacity (kWh)](index_files/figure-html/figure5-output-1.png){#figure5 width=526 height=411}\n:::\n:::\n\n\n::: {#cell-Figure6 .cell execution_count=9}\n``` {.python .cell-code}\nplt.figure()\nsns.histplot(data=ev_charging,x='Energy Consumed (kWh)')\nplt.title('\\nFigure 6 - Histogram of Energy Consumed during Charging (kWh)\\n')\nplt.xlabel('Energy Consumed')\nplt.ylabel('Count')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Histogram of Energy Consumed during Charging (kWh)](index_files/figure-html/figure6-output-1.png){#figure6 width=556 height=411}\n:::\n:::\n\n\n::: {#cell-Figure7 .cell execution_count=10}\n``` {.python .cell-code}\nplt.figure()\nsns.histplot(data=ev_charging,x='Charging Rate (kW)')\nplt.title('\\nFigure 7 - Histogram of Charging Rate (kw)\\n')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Figure 7 - Histogram of Charging Rate (kw)](index_files/figure-html/figure7-output-1.png){#figure7 width=522 height=411}\n:::\n:::\n\n\n::: {#cell-Figure8 .cell execution_count=11}\n``` {.python .cell-code}\nplt.figure(figsize=(8,6))\nsns.boxplot(data=ev_charging,x='Time of Day',y='Charging Cost (USD)',hue='Charger Type')\nplt.title('\\nFigure 8 - Charging Cost (USD) vs. Time of Day for Three Charger Types\\n')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Charging Station Location vs. Charging Duration (hours)](index_files/figure-html/figure8-output-1.png){#figure8 width=659 height=559}\n:::\n:::\n\n\n::: {#cell-Figure9 .cell execution_count=12}\n``` {.python .cell-code}\nplt.figure(figsize=(8,6))\nsns.scatterplot(data=ev_charging,x='Temperature (°C)',y='Charging Rate (kW)',hue='Vehicle Age (years)')\nplt.title('\\nFigure 9 - Charging RAte (kW) as a function of Temperature (C) for Vehicles between 0 and 10 years old\\n')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Charging Station Location vs. Charging Duration (hours)](index_files/figure-html/figure9-output-1.png){#figure9 width=846 height=559}\n:::\n:::\n\n\n::: {#figure10 .cell execution_count=13}\n``` {.python .cell-code}\nplt.figure()\nsns.pairplot(ev_charging,diag_kind='hist',hue='Vehicle Model')\nplt.title('\\nFigure 10 - Seaborn Pair Plot for EV Charging Dataset Variables\\n')\nplt.show()\n```\n\n::: {#figure10-1 .cell-output .cell-output-display}\n```\n<Figure size 576x384 with 0 Axes>\n```\n\nSeaborn Pair Plot for EV Charging Dataset Variables\n:::\n\n::: {.cell-output .cell-output-display}\n![](index_files/figure-html/figure10-output-2.png){#figure10-2 width=2520 height=2355}\n:::\n:::\n\n\n### Statistical Review of the Data\n\n::: {#52c676ef .cell execution_count=14}\n``` {.python .cell-code}\n# ANOVA - does vehicle model influence charging cost? \n# Ho: model does not effect charing cost\n# Ha: at least one model has a different charging cost \n\nmodel = ev_charging['Vehicle Model'].unique()\nprint(model)\n\nev_charging = ev_charging.dropna()\n\nBMW = ev_charging[ev_charging['Vehicle Model'] == model[0]]['Charging Cost (USD)']\nHyundai = ev_charging[ev_charging['Vehicle Model'] == model[1]]['Charging Cost (USD)']\nChevy = ev_charging[ev_charging['Vehicle Model'] == model[2]]['Charging Cost (USD)']\nNissan = ev_charging[ev_charging['Vehicle Model'] == model[3]]['Charging Cost (USD)']\nTesla = ev_charging[ev_charging['Vehicle Model'] == model[4]]['Charging Cost (USD)']\n\nf_statistic, p_value = stats.f_oneway(BMW, Hyundai, Chevy, Nissan, Tesla)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n['BMW i3' 'Hyundai Kona' 'Chevy Bolt' 'Nissan Leaf' 'Tesla Model 3']\n```\n:::\n:::\n\n\n::: {#cell-Figure11 .cell execution_count=15}\n``` {.python .cell-code}\nplt.figure()\nsns.boxplot(data=ev_charging,x='Vehicle Model',y='Charging Cost (USD)')\nplt.title(f'Figure 11 - Analysis of Variance: Charging Cost (USD) vs. Vehicle Model\\n(P-value = {p_value:3.3f})')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![ANOVA vehicle model vs charging cost](index_files/figure-html/figure11-output-1.png){#figure11 width=588 height=393}\n:::\n:::\n\n\n::: {#77d17489 .cell execution_count=16}\n``` {.python .cell-code}\n# ANOVA - does charging location influence charging cost? \n# Ho: charging location does not effect charing cost\n# Ha: at least one location  has a different charging cost \n\nmodel = ev_charging['Charging Station Location'].unique()\nprint(model)\n\nev_charging = ev_charging.dropna()\n\nHouston = ev_charging[ev_charging['Charging Station Location'] == model[0]]['Charging Cost (USD)']\nSF = ev_charging[ev_charging['Charging Station Location'] == model[1]]['Charging Cost (USD)']\nLA = ev_charging[ev_charging['Charging Station Location'] == model[2]]['Charging Cost (USD)']\nChicago = ev_charging[ev_charging['Charging Station Location'] == model[3]]['Charging Cost (USD)']\nNY = ev_charging[ev_charging['Charging Station Location'] == model[4]]['Charging Cost (USD)']\n\nf_statistic, p_value = stats.f_oneway(Houston, SF, LA, Chicago, NY)\n\nprint('P-value:',p_value)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n['Houston' 'San Francisco' 'Los Angeles' 'Chicago' 'New York']\nP-value: 0.2448970288756026\n```\n:::\n:::\n\n\n::: {#cell-Figure12 .cell execution_count=17}\n``` {.python .cell-code}\nplt.figure()\nsns.boxplot(data=ev_charging,x='Charging Station Location',y='Charging Cost (USD)')\nplt.title(f'Figure 12 - Analysis of Variance: Charging Cost (USD) vs. Charging Location\\n(P-value = {p_value:3.3f})')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![ANOVA: Charging Location vs Charging Cost](index_files/figure-html/figure12-output-1.png){#figure12 width=622 height=393}\n:::\n:::\n\n\n::: {#ebfef70c .cell execution_count=18}\n``` {.python .cell-code}\n# ANOVA - does the type of charger influence charging cost? \n# Ho: type of charger does not effect charing cost\n# Ha: at least one charger type has a uniqeu or different mean charging cost \n\nmodel = ev_charging['Charger Type'].unique()\nprint(model)\n\nev_charging = ev_charging.dropna()\n\nFAST = ev_charging[ev_charging['Charger Type'] == model[0]]['Charging Cost (USD)']\nLevel_1 = ev_charging[ev_charging['Charger Type'] == model[1]]['Charging Cost (USD)']\nLevel_2 = ev_charging[ev_charging['Charger Type'] == model[2]]['Charging Cost (USD)']\n\n\nf_statistic, p_value = stats.f_oneway(FAST, Level_1,Level_2)\n\nprint('P-value:',p_value)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n['DC Fast Charger' 'Level 1' 'Level 2']\nP-value: 0.022949860885377312\n```\n:::\n:::\n\n\n::: {#cell-Figure13 .cell execution_count=19}\n``` {.python .cell-code}\nplt.figure()\nsns.boxplot(data=ev_charging,x='Charger Type',y='Charging Cost (USD)')\nplt.title(f'Figure 13: ANOVA - Charger Type vs. Charging Cost (USD)\\n(p-value = {p_value:3.2f})')\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![ANOVA: Charger Type vs Charging Cost](index_files/figure-html/figure13-output-1.png){#figure13 width=517 height=393}\n:::\n:::\n\n\n::: {#ae9441c2 .cell execution_count=20}\n``` {.python .cell-code}\n# linear regression - does charging temperature have an effect on charging cost? \n# Ho: linear regression coefficient = 0\n# Ha: linear regression coefficient is not equal to 0\n\nX = ev_charging[['Temperature (°C)']]\n\ny = ev_charging['Charging Cost (USD)']\n\nX = sm.add_constant(X)\n\nmodel = sm.OLS(y,X).fit()\n\nprint(model.summary())\n\np_value_temp = model.pvalues['Temperature (°C)']\nprint(f\"\\nP-value for Temperature (°C): {p_value_temp:.5f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                             OLS Regression Results                            \n===============================================================================\nDep. Variable:     Charging Cost (USD)   R-squared:                       0.004\nModel:                             OLS   Adj. R-squared:                  0.003\nMethod:                  Least Squares   F-statistic:                     4.461\nDate:                 Sun, 08 Dec 2024   Prob (F-statistic):             0.0349\nTime:                         20:10:12   Log-Likelihood:                -4292.6\nNo. Observations:                 1131   AIC:                             8589.\nDf Residuals:                     1129   BIC:                             8599.\nDf Model:                            1                                         \nCovariance Type:             nonrobust                                         \n====================================================================================\n                       coef    std err          t      P>|t|      [0.025      0.975]\n------------------------------------------------------------------------------------\nconst               21.7858      0.462     47.171      0.000      20.880      22.692\nTemperature (°C)     0.0459      0.022      2.112      0.035       0.003       0.089\n==============================================================================\nOmnibus:                       33.961   Durbin-Watson:                   2.134\nProb(Omnibus):                  0.000   Jarque-Bera (JB):               26.027\nSkew:                           0.279   Prob(JB):                     2.23e-06\nKurtosis:                       2.510   Cond. No.                         30.7\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n\nP-value for Temperature (°C): 0.03489\n```\n:::\n:::\n\n\n::: {#cell-Figure14 .cell execution_count=21}\n``` {.python .cell-code}\nplt.figure(figsize=(10,6))\nsns.regplot(\n    data=ev_charging, \n    x='Temperature (°C)', \n    y='Charging Cost (USD)', \n    ci=None,      \n    line_kws={\"color\": \"red\"},  \n    scatter_kws={\"alpha\": 0.6} \n)\nplt.title(\"Figure 14: Linear Regression - Charging Cost vs Temperature (C)\\nregression equation: Charging Cost (USD) = 21.7858 + 0.0459* Temperature (C)\\nRegressor Coefficient P-value = 0.035\",fontsize=10)\nplt.xlabel(\"Temperature (°C)\")\nplt.ylabel(\"Charging Cost (USD)\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![Linear Regression: Temperature vs Charging Cost](index_files/figure-html/figure14-output-1.png){#figure14 width=808 height=551}\n:::\n:::\n\n\n### Empirical Model Building \n\n::: {#306a488a .cell execution_count=22}\n``` {.python .cell-code}\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.preprocessing import OneHotEncoder, StandardScaler\nfrom sklearn.compose import ColumnTransformer\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.metrics import mean_squared_error, r2_score\nfrom sklearn.preprocessing import PolynomialFeatures\n```\n:::\n\n\n::: {#e1f8a868 .cell execution_count=23}\n``` {.python .cell-code}\nev_charging = ev_charging.dropna()\n```\n:::\n\n\n::: {#96213324 .cell execution_count=24}\n``` {.python .cell-code}\nX = ev_charging[['Vehicle Model','Battery Capacity (kWh)','Charging Station Location','Energy Consumed (kWh)','Charging Duration (hours)','Charging Rate (kW)','Time of Day','Day of Week','State of Charge (Start %)','State of Charge (End %)','Distance Driven (since last charge) (km)','Temperature (°C)','Vehicle Age (years)','Charger Type','User Type']]\n\ny = ev_charging['Charging Cost (USD)']\n\n\nnum_variables = ['Battery Capacity (kWh)','Energy Consumed (kWh)','Charging Duration (hours)','Charging Rate (kW)','State of Charge (Start %)','State of Charge (End %)','Distance Driven (since last charge) (km)','Temperature (°C)','Vehicle Age (years)']\n\ncat_variables = ['Vehicle Model','Charging Station Location','Time of Day','Day of Week','Charger Type','User Type']\n\n# Preprocessing for numerical and categorical features\npreprocessor = ColumnTransformer(\n    transformers=[\n        ('num', StandardScaler(), num_variables),\n        ('cat', OneHotEncoder(handle_unknown='ignore'), cat_variables)\n    ]\n)\n\n# Define a model pipeline\nmodel = Pipeline(steps=[\n    ('preprocessor', preprocessor),\n    ('regressor', LinearRegression())\n])\n\n# Split the data into train and test sets\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n\n\n\n# Train the model\nmodel.fit(X_train, y_train)\n\n\n# Predict on the test set\ny_pred = model.predict(X_test)\n\n# Evaluate the model\nmse = mean_squared_error(y_test, y_pred)\nr2 = r2_score(y_test, y_pred)\n\nprint(f\"Mean Squared Error: {mse:.2f}\")\nprint(f\"R-squared: {r2:.2f}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nMean Squared Error: 126.57\nR-squared: -0.03\n```\n:::\n:::\n\n\n::: {#759a79a0 .cell execution_count=25}\n``` {.python .cell-code}\nX = ev_charging[['Vehicle Model','Battery Capacity (kWh)','Charging Station Location','Energy Consumed (kWh)','Charging Duration (hours)','Charging Rate (kW)','Time of Day','Day of Week','State of Charge (Start %)','State of Charge (End %)','Distance Driven (since last charge) (km)','Temperature (°C)','Vehicle Age (years)','Charger Type','User Type']]\n\ny = ev_charging['Charging Cost (USD)']\n\nX = pd.get_dummies(X, drop_first=True, dtype=float)\nX = sm.add_constant(X)\n\nmodel = sm.OLS(y,X).fit()\n\nprint(model.summary())\n\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                             OLS Regression Results                            \n===============================================================================\nDep. Variable:     Charging Cost (USD)   R-squared:                       0.043\nModel:                             OLS   Adj. R-squared:                  0.017\nMethod:                  Least Squares   F-statistic:                     1.655\nDate:                 Sun, 08 Dec 2024   Prob (F-statistic):             0.0151\nTime:                         20:10:13   Log-Likelihood:                -4269.8\nNo. Observations:                 1131   AIC:                             8602.\nDf Residuals:                     1100   BIC:                             8758.\nDf Model:                           30                                         \nCovariance Type:             nonrobust                                         \n============================================================================================================\n                                               coef    std err          t      P>|t|      [0.025      0.975]\n------------------------------------------------------------------------------------------------------------\nconst                                       27.6761      2.842      9.739      0.000      22.100      33.252\nBattery Capacity (kWh)                       0.0009      0.016      0.055      0.956      -0.030       0.031\nEnergy Consumed (kWh)                       -0.0076      0.014     -0.523      0.601      -0.036       0.021\nCharging Duration (hours)                    0.2679      0.304      0.880      0.379      -0.330       0.865\nCharging Rate (kW)                          -0.0005      0.023     -0.022      0.982      -0.046       0.045\nState of Charge (Start %)                   -0.0165      0.013     -1.243      0.214      -0.043       0.010\nState of Charge (End %)                     -0.0411      0.019     -2.142      0.032      -0.079      -0.003\nDistance Driven (since last charge) (km)     0.0014      0.004      0.372      0.710      -0.006       0.009\nTemperature (°C)                             0.0488      0.022      2.230      0.026       0.006       0.092\nVehicle Age (years)                         -0.0663      0.138     -0.479      0.632      -0.338       0.205\nVehicle Model_Chevy Bolt                     0.6426      1.037      0.620      0.536      -1.392       2.677\nVehicle Model_Hyundai Kona                   2.5749      1.034      2.489      0.013       0.545       4.605\nVehicle Model_Nissan Leaf                    2.5322      1.019      2.486      0.013       0.533       4.531\nVehicle Model_Tesla Model 3                  1.0139      1.004      1.010      0.313      -0.957       2.985\nCharging Station Location_Houston           -1.7790      1.034     -1.721      0.086      -3.808       0.250\nCharging Station Location_Los Angeles       -0.6016      1.016     -0.592      0.554      -2.596       1.392\nCharging Station Location_New York          -1.2459      1.045     -1.193      0.233      -3.296       0.804\nCharging Station Location_San Francisco     -2.1057      1.042     -2.021      0.044      -4.150      -0.061\nTime of Day_Evening                         -1.1979      0.899     -1.332      0.183      -2.963       0.567\nTime of Day_Morning                         -0.9523      0.912     -1.044      0.297      -2.743       0.838\nTime of Day_Night                           -1.3616      0.942     -1.445      0.149      -3.210       0.487\nDay of Week_Monday                          -0.7105      1.215     -0.585      0.559      -3.094       1.673\nDay of Week_Saturday                        -0.5143      1.192     -0.431      0.666      -2.854       1.825\nDay of Week_Sunday                          -1.4321      1.198     -1.195      0.232      -3.783       0.919\nDay of Week_Thursday                         1.3305      1.268      1.049      0.294      -1.158       3.819\nDay of Week_Tuesday                         -1.7839      1.184     -1.506      0.132      -4.108       0.540\nDay of Week_Wednesday                        0.5948      1.198      0.497      0.619      -1.755       2.945\nCharger Type_Level 1                        -2.0433      0.778     -2.627      0.009      -3.569      -0.517\nCharger Type_Level 2                        -1.2791      0.802     -1.596      0.111      -2.852       0.294\nUser Type_Commuter                           0.1571      0.795      0.198      0.843      -1.403       1.717\nUser Type_Long-Distance Traveler            -0.5242      0.807     -0.650      0.516      -2.108       1.059\n==============================================================================\nOmnibus:                       43.971   Durbin-Watson:                   2.157\nProb(Omnibus):                  0.000   Jarque-Bera (JB):               26.044\nSkew:                           0.221   Prob(JB):                     2.21e-06\nKurtosis:                       2.402   Cond. No.                     2.01e+03\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n[2] The condition number is large, 2.01e+03. This might indicate that there are\nstrong multicollinearity or other numerical problems.\n```\n:::\n:::\n\n\n::: {#fc5d7080 .cell execution_count=26}\n``` {.python .cell-code}\n## removing non-significant terms to improve R2_adj\n\nX = ev_charging[['Vehicle Model','Charging Station Location','Time of Day','Day of Week','State of Charge (End %)','Temperature (°C)','Charger Type','User Type']]\n\ny = ev_charging['Charging Cost (USD)']\n\nX = pd.get_dummies(X, drop_first=True, dtype=float)\nX = sm.add_constant(X)\n\nmodel = sm.OLS(y,X).fit()\n\nprint(model.summary())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                             OLS Regression Results                            \n===============================================================================\nDep. Variable:     Charging Cost (USD)   R-squared:                       0.041\nModel:                             OLS   Adj. R-squared:                  0.021\nMethod:                  Least Squares   F-statistic:                     2.035\nDate:                 Sun, 08 Dec 2024   Prob (F-statistic):            0.00277\nTime:                         20:10:13   Log-Likelihood:                -4271.4\nNo. Observations:                 1131   AIC:                             8591.\nDf Residuals:                     1107   BIC:                             8712.\nDf Model:                           23                                         \nCovariance Type:             nonrobust                                         \n===========================================================================================================\n                                              coef    std err          t      P>|t|      [0.025      0.975]\n-----------------------------------------------------------------------------------------------------------\nconst                                      27.1726      2.102     12.930      0.000      23.049      31.296\nState of Charge (End %)                    -0.0405      0.019     -2.123      0.034      -0.078      -0.003\nTemperature (°C)                            0.0467      0.022      2.145      0.032       0.004       0.089\nVehicle Model_Chevy Bolt                    0.7493      1.027      0.730      0.466      -1.265       2.764\nVehicle Model_Hyundai Kona                  2.6782      1.027      2.607      0.009       0.662       4.694\nVehicle Model_Nissan Leaf                   2.6001      1.013      2.568      0.010       0.613       4.587\nVehicle Model_Tesla Model 3                 1.0828      0.998      1.085      0.278      -0.875       3.041\nCharging Station Location_Houston          -1.8020      1.031     -1.749      0.081      -3.824       0.220\nCharging Station Location_Los Angeles      -0.6514      1.012     -0.644      0.520      -2.637       1.334\nCharging Station Location_New York         -1.2522      1.040     -1.205      0.229      -3.292       0.788\nCharging Station Location_San Francisco    -2.0176      1.034     -1.951      0.051      -4.047       0.012\nTime of Day_Evening                        -1.1499      0.895     -1.284      0.199      -2.907       0.607\nTime of Day_Morning                        -0.9250      0.909     -1.017      0.309      -2.709       0.859\nTime of Day_Night                          -1.3318      0.939     -1.418      0.156      -3.174       0.510\nDay of Week_Monday                         -0.7490      1.210     -0.619      0.536      -3.123       1.625\nDay of Week_Saturday                       -0.5816      1.188     -0.490      0.624      -2.912       1.749\nDay of Week_Sunday                         -1.5309      1.192     -1.285      0.199      -3.869       0.807\nDay of Week_Thursday                        1.2658      1.263      1.002      0.317      -1.213       3.745\nDay of Week_Tuesday                        -1.8306      1.180     -1.551      0.121      -4.146       0.485\nDay of Week_Wednesday                       0.4830      1.190      0.406      0.685      -1.853       2.819\nCharger Type_Level 1                       -2.0737      0.776     -2.673      0.008      -3.596      -0.551\nCharger Type_Level 2                       -1.3212      0.797     -1.657      0.098      -2.886       0.243\nUser Type_Commuter                          0.1675      0.789      0.212      0.832      -1.381       1.716\nUser Type_Long-Distance Traveler           -0.5557      0.803     -0.692      0.489      -2.132       1.020\n==============================================================================\nOmnibus:                       42.005   Durbin-Watson:                   2.152\nProb(Omnibus):                  0.000   Jarque-Bera (JB):               25.876\nSkew:                           0.229   Prob(JB):                     2.40e-06\nKurtosis:                       2.418   Cond. No.                         638.\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n```\n:::\n:::\n\n\n::: {#7f2d9305 .cell execution_count=27}\n``` {.python .cell-code}\n## removing additonal non-significant terms to improve R2_adj\n\nX = ev_charging[['Vehicle Model','Charging Station Location','State of Charge (End %)','Temperature (°C)','Charger Type','User Type']]\n\ny = ev_charging['Charging Cost (USD)']\n\nX = pd.get_dummies(X, drop_first=True, dtype=float)\nX = sm.add_constant(X)\n\nmodel = sm.OLS(y,X).fit()\n\nprint(model.summary())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                             OLS Regression Results                            \n===============================================================================\nDep. Variable:     Charging Cost (USD)   R-squared:                       0.030\nModel:                             OLS   Adj. R-squared:                  0.018\nMethod:                  Least Squares   F-statistic:                     2.503\nDate:                 Sun, 08 Dec 2024   Prob (F-statistic):            0.00163\nTime:                         20:10:13   Log-Likelihood:                -4277.3\nNo. Observations:                 1131   AIC:                             8585.\nDf Residuals:                     1116   BIC:                             8660.\nDf Model:                           14                                         \nCovariance Type:             nonrobust                                         \n===========================================================================================================\n                                              coef    std err          t      P>|t|      [0.025      0.975]\n-----------------------------------------------------------------------------------------------------------\nconst                                      26.2434      1.879     13.968      0.000      22.557      29.930\nState of Charge (End %)                    -0.0448      0.019     -2.363      0.018      -0.082      -0.008\nTemperature (°C)                            0.0480      0.022      2.208      0.027       0.005       0.091\nVehicle Model_Chevy Bolt                    0.8166      1.022      0.799      0.424      -1.188       2.821\nVehicle Model_Hyundai Kona                  2.7024      1.023      2.641      0.008       0.695       4.710\nVehicle Model_Nissan Leaf                   2.5519      1.010      2.526      0.012       0.570       4.534\nVehicle Model_Tesla Model 3                 1.0744      0.995      1.080      0.281      -0.878       3.027\nCharging Station Location_Houston          -2.1081      1.025     -2.056      0.040      -4.120      -0.096\nCharging Station Location_Los Angeles      -0.8851      1.004     -0.882      0.378      -2.855       1.085\nCharging Station Location_New York         -1.2028      1.036     -1.161      0.246      -3.235       0.829\nCharging Station Location_San Francisco    -2.1567      1.034     -2.085      0.037      -4.186      -0.127\nCharger Type_Level 1                       -2.1236      0.775     -2.740      0.006      -3.644      -0.603\nCharger Type_Level 2                       -1.3024      0.795     -1.639      0.102      -2.862       0.257\nUser Type_Commuter                          0.1773      0.789      0.225      0.822      -1.370       1.725\nUser Type_Long-Distance Traveler           -0.5135      0.799     -0.642      0.521      -2.082       1.055\n==============================================================================\nOmnibus:                       36.441   Durbin-Watson:                   2.144\nProb(Omnibus):                  0.000   Jarque-Bera (JB):               24.787\nSkew:                           0.244   Prob(JB):                     4.15e-06\nKurtosis:                       2.463   Cond. No.                         530.\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n```\n:::\n:::\n\n\n## Results \n\n\n## Discussion\n\n\n\n\n\n## Conclusions\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}